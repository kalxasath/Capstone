apply plugin: 'com.android.application'

// Begin of reading the sensitive data
// GV 21/02/2018
def noKeyFound = '"NO_KEY_FOUND"'
def youtubeApiKey = noKeyFound

def sensitiveDataFile = file('../sensitive_data.txt')
def Properties sensitiveData = new Properties()

if (sensitiveDataFile.canRead()){
    // Read the sensitive data from file sensitive_data.txt
    sensitiveData.load(new FileInputStream(sensitiveDataFile))

    if (sensitiveData != null) {
        if (sensitiveData.containsKey('youtubeApiKey')) theMovieDbApiKey = sensitiveData['youtubeApiKey']
    }
}

// In this section a reviewer can insert directly his own sensitive data
// by replacing the strings beginning with REVIEWERS_
// Just double click on the string and paste you own data
if (youtubeApiKey == noKeyFound) youtubeApiKey = '"REVIEWERS_YOUTUBE_API_KEY_GOES_HERE"'
// End of reading the sensitive data

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.aiassoft.capstone"
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Begin of injecting the sensitive data
        // Add the sensitive data as Constant Fields to the BuildConfig class
        buildConfigField "String", "YOUTUBE_API_KEY", youtubeApiKey
        // Add the sensitive data as String Resources
        resValue "string", "YOUTUBE_API_KEY", youtubeApiKey
        // End of injecting the sensitive data
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$androidSupportVersion"
    implementation "com.android.support:design:$androidSupportVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
}
